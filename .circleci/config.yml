version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.8  # Cambia a una imagen base de Python
      - image: cimg/node:14  # Añade una imagen de Node.js
    steps:
      - checkout
      - run:
          name: Install Java
          command: |
            sudo apt-get update
            sudo apt-get install -y openjdk-17-jdk  # Instalar Java
      - run:
          name: Install Python dependencies
          command: |
            sudo apt-get install -y python3-pip python3-venv
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: Run Linting
          command: |
            . venv/bin/activate
            flake8 .
      - run:
          name: Run tests with coverage
          command: |
            . venv/bin/activate
            pytest --cov=app --cov-report=xml --cov-report=term
      - run:
          name: Run SonarCloud Scanner
          command: |
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
            unzip sonar-scanner-cli-5.0.1.3006-linux.zip
            ./sonar-scanner-5.0.1.3006-linux/bin/sonar-scanner \
              -Dsonar.projectKey=ThomasAlbertoLombardo_ci-cd-python-app \
              -Dsonar.organization=thomasalbertolombardo \
              -Dsonar.sources=. \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=${SONAR_TOKEN} \
              -X
      - run:
          name: Run Snyk test
          command: |
            . venv/bin/activate
            npm install -g snyk  # Instalar Snyk globalmente.
            snyk auth $SNYK_TOKEN  # Autenticarse con Snyk usando el token.
            snyk test --all-projects --json > snyk_report.json || true  # Ejecutar el análisis de Snyk.

workflows:
  build-test:
    jobs:
      - build-and-test



